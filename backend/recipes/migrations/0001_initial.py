# Generated by Django 5.0.14 on 2025-05-13 07:00

import django.core.validators
import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="Ingredient",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "name",
                    models.CharField(
                        help_text="Ingredient name",
                        max_length=128,
                        unique=True,
                        verbose_name="Ingredient name",
                    ),
                ),
                (
                    "measurement_unit",
                    models.CharField(
                        help_text="Ingredient measurement unit",
                        max_length=64,
                        verbose_name="Ingredient measurement unit",
                    ),
                ),
            ],
            options={
                "verbose_name": "Ingredient",
                "verbose_name_plural": "Ingredients",
                "ordering": ["-id"],
            },
        ),
        migrations.CreateModel(
            name="Recipe",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "name",
                    models.CharField(
                        help_text="Recipe name",
                        max_length=256,
                        verbose_name="Recipe name",
                    ),
                ),
                (
                    "text",
                    models.TextField(
                        help_text="Recipe description",
                        verbose_name="Recipe description",
                    ),
                ),
                (
                    "cooking_time",
                    models.PositiveSmallIntegerField(
                        help_text="Cooking time in minutes",
                        validators=[
                            django.core.validators.MinValueValidator(
                                1, "Can not be less than 1 minute(s)"
                            )
                        ],
                        verbose_name="Cooking time in minutes",
                    ),
                ),
                (
                    "image",
                    models.ImageField(
                        help_text="Recipe image",
                        upload_to="media/recipes/",
                        verbose_name="Recipe image",
                    ),
                ),
            ],
            options={
                "verbose_name": "Recipe",
                "verbose_name_plural": "Recipes",
                "ordering": ("-id",),
            },
        ),
        migrations.CreateModel(
            name="RecipeIngredient",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "amount",
                    models.PositiveSmallIntegerField(
                        validators=[
                            django.core.validators.MinValueValidator(
                                1, "Minimum amount is 1"
                            )
                        ],
                        verbose_name="Amount",
                    ),
                ),
            ],
            options={
                "verbose_name": "Ingredient amount",
                "verbose_name_plural": "Ingredient amounts",
                "ordering": ["-id"],
            },
        ),
        migrations.CreateModel(
            name="RecipeTags",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
            ],
            options={
                "verbose_name": "Recipe tag",
                "verbose_name_plural": "Recipe tags",
                "ordering": ("-id",),
            },
        ),
        migrations.CreateModel(
            name="ShoppingList",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
            ],
            options={
                "verbose_name": "Shopping list",
                "verbose_name_plural": "Shopping lists",
            },
        ),
        migrations.CreateModel(
            name="Tag",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "name",
                    models.CharField(
                        help_text="Tag name", max_length=32, verbose_name="Tag name"
                    ),
                ),
                (
                    "slug",
                    models.SlugField(
                        help_text="Tag slug",
                        max_length=32,
                        unique=True,
                        validators=[
                            django.core.validators.RegexValidator(
                                message="Slug contains restricted symbols. Please use only letters, numbers and _ symbol",
                                regex="^[-a-zA-Z0-9_]+$",
                            )
                        ],
                        verbose_name="Tag slug",
                    ),
                ),
            ],
            options={
                "verbose_name": "Tag",
                "verbose_name_plural": "Tags",
            },
        ),
        migrations.CreateModel(
            name="Favorite",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="favorite",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Favorite user",
                    ),
                ),
            ],
            options={
                "verbose_name": "Favorite",
                "verbose_name_plural": "Favorites",
                "ordering": ["-id"],
            },
        ),
        migrations.AddConstraint(
            model_name="ingredient",
            constraint=models.UniqueConstraint(
                fields=("name", "measurement_unit"), name="unique_ingredient"
            ),
        ),
        migrations.AddField(
            model_name="recipe",
            name="author",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="recipes",
                to=settings.AUTH_USER_MODEL,
                verbose_name="Recipe author",
            ),
        ),
        migrations.AddField(
            model_name="favorite",
            name="recipe",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="favorite",
                to="recipes.recipe",
                verbose_name="Favorite recipe",
            ),
        ),
        migrations.AddField(
            model_name="recipeingredient",
            name="ingredient",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="ingredient_recipe",
                to="recipes.ingredient",
                verbose_name="Ingredient",
            ),
        ),
        migrations.AddField(
            model_name="recipeingredient",
            name="recipe",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="ingredient_list",
                to="recipes.recipe",
                verbose_name="Recipe",
            ),
        ),
        migrations.AddField(
            model_name="recipe",
            name="ingredients",
            field=models.ManyToManyField(
                help_text="Recipe ingredients",
                related_name="recipes",
                through="recipes.RecipeIngredient",
                to="recipes.ingredient",
                verbose_name="Recipe ingredients",
            ),
        ),
        migrations.AddField(
            model_name="recipetags",
            name="recipe",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="tag_list",
                to="recipes.recipe",
                verbose_name="Recipe",
            ),
        ),
        migrations.AddField(
            model_name="shoppinglist",
            name="recipe",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="shopping_list",
                to="recipes.recipe",
                verbose_name="Recipe",
            ),
        ),
        migrations.AddField(
            model_name="shoppinglist",
            name="user",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="shopping_list",
                to=settings.AUTH_USER_MODEL,
                verbose_name="User",
            ),
        ),
        migrations.AddField(
            model_name="recipetags",
            name="tag",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="tag_recipe",
                to="recipes.tag",
                verbose_name="Tag",
            ),
        ),
        migrations.AddField(
            model_name="recipe",
            name="tags",
            field=models.ManyToManyField(
                help_text="Recipe tags",
                related_name="recipes",
                through="recipes.RecipeTags",
                to="recipes.tag",
                verbose_name="Recipe tags",
            ),
        ),
        migrations.AddConstraint(
            model_name="favorite",
            constraint=models.UniqueConstraint(
                fields=("user", "recipe"), name="unique_favorite_recipe"
            ),
        ),
        migrations.AddConstraint(
            model_name="recipeingredient",
            constraint=models.UniqueConstraint(
                fields=("ingredient", "recipe"), name="unique_recipe_ingredient"
            ),
        ),
        migrations.AddConstraint(
            model_name="shoppinglist",
            constraint=models.UniqueConstraint(
                fields=("user", "recipe"), name="unique_shopping_list_recipe"
            ),
        ),
    ]
